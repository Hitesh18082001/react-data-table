{"ast":null,"code":"var _jsxFileName = \"/Users/karamveersingh/Desktop/DataTable/datatable/src/Table.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table({\n  data\n}) {\n  _s();\n  const column = ['id', 'title', 'description', 'price', 'discountPercentage', 'rating', 'stock', 'brand', 'category'];\n  const [sortColumn, setSortColumn] = useState(null);\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [debounceQuery, setDebounceQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [resultsPerPage, setResultsPerPage] = useState(10);\n  const [selectedColumns, setSelectedColumns] = useState([...column].reduce((acc, val) => {\n    acc[val] = true;\n    return acc;\n  }, {}));\n  const [priceFilterEnabled, setPriceFilterEnabled] = useState(false);\n  const [minPrice, setMinPrice] = useState(0);\n  const [maxPrice, setMaxPrice] = useState(1000);\n  const handleSort = columnName => {\n    if (sortColumn === columnName) {\n      setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortColumn(columnName);\n      setSortOrder(\"asc\");\n    }\n  };\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const totalResults = data === null || data === void 0 ? void 0 : data.length;\n  const totalPages = Math.ceil(totalResults / resultsPerPage);\n  const startIndex = (currentPage - 1) * resultsPerPage;\n  const endIndex = startIndex + resultsPerPage;\n  const currentPageData = data === null || data === void 0 ? void 0 : data.slice(startIndex, endIndex);\n  const filteredData = currentPageData === null || currentPageData === void 0 ? void 0 : currentPageData.filter(item => Object.values(item).some(value => new RegExp(debounceQuery, \"i\").test(value)));\n  const sortedData = filteredData === null || filteredData === void 0 ? void 0 : filteredData.slice().sort((a, b) => {\n    if (sortColumn) {\n      if (sortOrder === \"asc\") {\n        return a[sortColumn] > b[sortColumn] ? 1 : -1;\n      } else {\n        return a[sortColumn] < b[sortColumn] ? 1 : -1;\n      }\n    }\n    return 0;\n  });\n  const priceFilteredData = priceFilterEnabled ? sortedData === null || sortedData === void 0 ? void 0 : sortedData.filter(item => item.price >= minPrice && item.price <= maxPrice) : sortedData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      resultsPerPage: resultsPerPage,\n      setResultsPerPage: setResultsPerPage,\n      setCurrentPage: setCurrentPage,\n      selectedColumns: selectedColumns,\n      setSelectedColumns: setSelectedColumns,\n      setPriceFilterEnabled: setPriceFilterEnabled,\n      setMinPrice: setMinPrice,\n      setMaxPrice: setMaxPrice,\n      minPrice: minPrice,\n      maxPrice: maxPrice,\n      priceFilterEnabled: priceFilterEnabled,\n      setDebounceQuery: setDebounceQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.entries(selectedColumns).map(([columnName, isChecked]) => isChecked && /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort(columnName),\n              children: columnName\n            }, columnName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: priceFilteredData === null || priceFilteredData === void 0 ? void 0 : priceFilteredData.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.entries(selectedColumns).map(([columnName, isChecked]) => isChecked && /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item[columnName]\n            }, columnName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 41\n            }, this))\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(currentPage - 1),\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), \"Page \", currentPage, \" of \", totalPages, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(currentPage + 1),\n          disabled: currentPage === totalPages,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(Table, \"48X+zcUjIhOZFW/k7GJWUmtLC8U=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","Header","jsxDEV","_jsxDEV","Table","data","_s","column","sortColumn","setSortColumn","sortOrder","setSortOrder","debounceQuery","setDebounceQuery","currentPage","setCurrentPage","resultsPerPage","setResultsPerPage","selectedColumns","setSelectedColumns","reduce","acc","val","priceFilterEnabled","setPriceFilterEnabled","minPrice","setMinPrice","maxPrice","setMaxPrice","handleSort","columnName","handlePageChange","page","totalResults","length","totalPages","Math","ceil","startIndex","endIndex","currentPageData","slice","filteredData","filter","item","Object","values","some","value","RegExp","test","sortedData","sort","a","b","priceFilteredData","price","children","fileName","_jsxFileName","lineNumber","columnNumber","entries","map","isChecked","onClick","id","disabled","_c","$RefreshReg$"],"sources":["/Users/karamveersingh/Desktop/DataTable/datatable/src/Table.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\nfunction Table({ data }) {\n    const column = ['id', 'title', 'description', 'price', 'discountPercentage', 'rating', 'stock', 'brand', 'category'];\n    const [sortColumn, setSortColumn] = useState(null);\n    const [sortOrder, setSortOrder] = useState(\"asc\");\n    const [debounceQuery, setDebounceQuery] = useState(\"\");\n    const [currentPage, setCurrentPage] = useState(1);\n    const [resultsPerPage, setResultsPerPage] = useState(10);\n    const [selectedColumns, setSelectedColumns] = useState([...column].reduce((acc, val) => { acc[val] = true; return acc; }, {}));\n    const [priceFilterEnabled, setPriceFilterEnabled] = useState(false);\n    const [minPrice, setMinPrice] = useState(0);\n    const [maxPrice, setMaxPrice] = useState(1000);\n\n    const handleSort = (columnName) => {\n        if (sortColumn === columnName) {\n            setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n        } else {\n            setSortColumn(columnName);\n            setSortOrder(\"asc\");\n        }\n    };\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const totalResults = data?.length;\n    const totalPages = Math.ceil(totalResults / resultsPerPage);\n    const startIndex = (currentPage - 1) * resultsPerPage;\n    const endIndex = startIndex + resultsPerPage;\n    const currentPageData = data?.slice(startIndex, endIndex);\n\n    const filteredData = currentPageData?.filter((item) =>\n        Object.values(item).some((value) =>\n            new RegExp(debounceQuery, \"i\").test(value)\n        )\n    );\n\n    const sortedData = filteredData?.slice().sort((a, b) => {\n        if (sortColumn) {\n            if (sortOrder === \"asc\") {\n                return a[sortColumn] > b[sortColumn] ? 1 : -1;\n            } else {\n                return a[sortColumn] < b[sortColumn] ? 1 : -1;\n            }\n        }\n        return 0;\n    });\n    const priceFilteredData = priceFilterEnabled\n        ? sortedData?.filter(item => item.price >= minPrice && item.price <= maxPrice)\n        : sortedData;\n\n    return (\n        <div>\n            <Header resultsPerPage={resultsPerPage}\n                setResultsPerPage={setResultsPerPage}\n                setCurrentPage={setCurrentPage}\n                selectedColumns={selectedColumns}\n                setSelectedColumns={setSelectedColumns}\n                setPriceFilterEnabled={setPriceFilterEnabled}\n                setMinPrice={setMinPrice}\n                setMaxPrice={setMaxPrice}\n                minPrice={minPrice}\n                maxPrice={maxPrice}\n                priceFilterEnabled={priceFilterEnabled}\n                setDebounceQuery={setDebounceQuery}\n            />\n\n            {data ? (\n                <div>\n                    <table>\n                        <thead>\n                            <tr>\n                                {Object.entries(selectedColumns).map(([columnName, isChecked]) => isChecked && (\n                                    <th key={columnName} onClick={() => handleSort(columnName)}>{columnName}</th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {priceFilteredData?.map((item) => (\n                                <tr key={item.id}>\n                                    {Object.entries(selectedColumns).map(([columnName, isChecked]) => isChecked && (\n                                        <td key={columnName}>{item[columnName]}</td>\n                                    ))}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                    <div>\n                        <button\n                            onClick={() => handlePageChange(currentPage - 1)}\n                            disabled={currentPage === 1}\n                        >\n                            Previous\n                        </button>\n                        Page {currentPage} of {totalPages}\n                        <button\n                            onClick={() => handlePageChange(currentPage + 1)}\n                            disabled={currentPage === totalPages}\n                        >\n                            Next\n                        </button>\n                    </div>\n                </div>\n            ) : (\n                <p>Loading...</p>\n            )}\n        </div>\n    );\n}\n\nexport default Table;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}